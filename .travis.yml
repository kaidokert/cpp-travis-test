language: cpp

sudo: false

env:
  matrix:
    - COMPILER=g++-4.9 COVERAGE=coverage GCOV=gcov-4.9
    - COMPILER=g++-5
    - COMPILER=clang++-3.6
    - COMPILER=clang++-3.7
    - COMPILER=arm-none-eabi-g++ TOOLCHAIN=gcc-arm-none-eabi-4_9-2015q3 ARM=yes
    - COMPILER=arm-none-eabi-g++ TOOLCHAIN=gcc-arm-none-eabi-5_4-2016q3 ARM=yes
    - COMPILER=arm-none-eabi-g++ TOOLCHAIN=gcc-arm-none-eabi-6_2-2016q4 ARM=yes

matrix:
  include:
    - os: osx
      osx_image: xcode6.4
      env: COMPILER='clang++'
    - os: osx
      osx_image: xcode7.3
      env: COMPILER='clang++'
    - os: osx
      osx_image: xcode8.2
      env: COMPILER='clang++'

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise
      - llvm-toolchain-precise-3.6
      - llvm-toolchain-precise-3.7
    packages:
      - g++-4.9
      - g++-5
      - clang-3.6
      - clang-3.7

cache:
  directories:
    - $HOME/arm-toolchains

install:
  - if test -n "$COVERAGE"; then pip install --user cpp-coveralls; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then brew update ; brew uninstall --force cmake; brew install cmake ; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then . sync-arm-toolchains.sh ; fi

before_script:
  - export CXX=$COMPILER
  - export PATH=$PATH:$HOME/arm-toolchains/$TOOLCHAIN/bin

script:
  - mkdir cmake-build; cd cmake-build
  - cmake .. -DCMAKE_CXX_COMPILER=$CXX -DCOVERAGE=$COVERAGE -DARM=$ARM
  - make VERBOSE=1 $COVERAGE
  - make all $COVERAGE
  - cd ..

after_success:
  - if test -n "$COVERAGE"; then coveralls --verbose --gcov-options '\-lp' --gcov '$GCOV' -E cmake-build/CMakefiles; fi
